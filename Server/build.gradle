apply plugin: "kotlin"
apply plugin: "kotlinx-serialization"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

description = "A robust and performant audio sending node meant for Discord Bots."
mainClassName = "obsidian.server.Obsidian"
version "1.0.0"

ext {
  moduleName = "Server"
}

dependencies {
  /* kotlin shit */
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"

  /* audio */
  implementation ("com.sedmelluq:lavaplayer:$lavaplayer_version") {
    exclude group: "com.sedmelluq", module: "lavaplayer-natives"
  }

  implementation("com.sedmelluq:lavaplayer-ext-youtube-rotator:$lavaplayer_ip_rotator_config") {
    exclude group: "com.sedmelluq", module: "lavaplayer"
  }

  // native library loading
  implementation "com.github.natanbc:native-loader:$native_loader_version"
  implementation "com.github.natanbc:lp-cross:$lpcross_version"

  // filters
  implementation "com.github.natanbc:lavadsp:$lavadsp_version"

  /* logging */
  implementation "ch.qos.logback:logback-classic:$logback_version"
  implementation "com.github.ajalt.mordant:mordant:$mordant_version"

  /* config */
  implementation "com.uchuhimo:konf-core:$konf_version"
  implementation "com.uchuhimo:konf-yaml:$konf_version"

  /* serialization */
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_json_version"
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.1.0"

  /* netty */
  implementation "io.netty:netty-transport:$netty_version"
  implementation "io.netty:netty-transport-native-epoll:$netty_version:linux-x86_64"

  /* ktor */

  // Serialization
  implementation "io.ktor:ktor-serialization:$ktor_version"

  // Server
  implementation "io.ktor:ktor-locations:$ktor_version"
  implementation "io.ktor:ktor-websockets:$ktor_version"
  implementation "io.ktor:ktor-server-cio:$ktor_version"
  implementation "io.ktor:ktor-server-core:$ktor_version"

  // Client
  implementation "io.ktor:ktor-client-core:$ktor_version"
  implementation "io.ktor:ktor-client-okhttp:$ktor_version"
  implementation "io.ktor:ktor-client-websockets:$ktor_version"
}

shadowJar {
  archiveBaseName.set("Obsidian")
  archiveClassifier.set("")
  archiveVersion.set("")
}

jar {
  manifest {
    attributes "Main-Class": mainClassName
  }
}

compileJava.options.encoding = "UTF-8"

compileKotlin {
  sourceCompatibility = JavaVersion.VERSION_13
  targetCompatibility = JavaVersion.VERSION_13

  kotlinOptions {
    jvmTarget = "11"
    incremental = true
    freeCompilerArgs += "-Xopt-in=kotlin.ExperimentalStdlibApi"
    freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ObsoleteCoroutinesApi"
    freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    freeCompilerArgs += "-Xopt-in=io.ktor.locations.KtorExperimentalLocationsAPI"
    freeCompilerArgs += "-Xinline-classes"
  }
}

